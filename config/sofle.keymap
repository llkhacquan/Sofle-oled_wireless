/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define NUMBER 3
#define ADJUST 4

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };

    combos {
        compatible = "zmk,combos";

        // Left bootloader combo: 1 + 5

        combo_bootloader_left {
            timeout-ms = <500>;
            key-positions = <1 5>;
            bindings = <&bootloader>;
        };

        // Right bootloader combo: 0 + 6

        combo_bootloader_right {
            timeout-ms = <500>;
            key-positions = <9 6>;
            bindings = <&bootloader>;
        };
    };

    behaviors {
        // Custom layer-tap with quick-tap for auto-repeat
        // Allows tap-then-hold to bypass layer and enable auto-repeat

        lt_repeat: layer_tap_with_repeat {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;  // Enable tap-then-hold repeat
            bindings = <&mo>, <&kp>;

            retro-tap;  // Allow tap on hold-release (forgiveness)
        };

        // Home row mod-tap

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "qwerty";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |CTL/A|ALT/S| GUI/D|SHF/F |  G   |                   |  H   |SHF/J | GUI/K |ALT/L |CTL/; |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp GRAVE   &kp N1      &kp N2      &kp N3       &kp N4       &kp N5                                               &kp N6              &kp N7       &kp N8       &kp N9      &kp N0         &kp DELETE
&kp TAB     &kp Q       &kp W       &kp E        &kp R        &kp T                                                &kp Y               &kp U        &kp I        &kp O       &kp P          &kp BSPC
&kp ESCAPE  &hm LCTRL A  &hm LALT S  &hm LGUI D  &hm LSHFT F  &kp G                                                &kp H               &hm RSHFT J  &hm RGUI K  &hm RALT L  &hm RCTRL SEMI  &kp SQT
&kp LSHFT   &kp Z       &kp X       &kp C        &kp V        &kp B                   &kp C_MUTE          &none    &kp N               &kp M        &kp COMMA    &kp DOT     &kp FSLH       &kp RSHFT
                        &kp LCTRL   &kp LALT     &kp LGUI     &lt_repeat 2 BACKSPACE  &lt_repeat 3 TAB    &kp TAB  &lt_repeat 1 SPACE  &kp RCTRL    &kp RALT     &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            label = "symbol";

            // SYMBOL LAYER - Programming Symbols (adapted from glove80)
            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  ]  |  (  |  )   |  ;   |  .   |                   |      |      |       |      |       |       |
            // |   [   |  !  |  {  |  }   |  ,   |  ?   |                   |   `  |  ←   |   ↑   |  ↓   |   →   |       |
            // |   #   |  ^  |  =  |  _   |  $   |  *   |                   |   "  | BSPC | SPACE | TAB  | ENTER |       |
            // |   ~   |  <  |  |  |  -   |  >   |  /   |   \   |  |   .   |   '  | DEL  | S-TAB | INS  |  ESC  |       |
            //               |     |      |      |      |       |  |       | HOME | PGUP | PGDN  | END  |

            bindings = <
&kp GRAVE  &kp RBKT   &kp LPAR   &kp RPAR           &kp SEMI   &kp DOT                            &trans     &trans     &trans       &trans    &trans     &trans
&kp LBKT   &kp EXCL   &kp LBRC   &kp RBRC           &kp COMMA  &kp QMARK                          &kp GRAVE  &kp LEFT   &kp UP       &kp DOWN  &kp RIGHT  &trans
&kp HASH   &kp CARET  &kp EQUAL  &kp UNDER          &kp DLLR   &kp ASTRK                          &kp DQT    &kp BSPC   &kp SPACE    &kp TAB   &kp ENTER  &trans
&kp TILDE  &kp LT     &kp PIPE   &kp MINUS          &kp GT     &kp FSLH     &kp BSLH     &kp DOT  &kp SQT    &kp DEL    &kp LS(TAB)  &kp INS   &kp ESC    &trans
                      &kp SQT    &kp DOUBLE_QUOTES  &kp PLUS   &kp PERCENT  &kp COLON    &trans   &kp HOME   &kp PG_UP  &kp PG_DN    &kp END
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            label = "cursor";

            // CURSOR LAYER - Navigation and Editing (adapted from glove80)
            // ------------------------------------------------------------------------------------------------------------
            // |       |  ESC |  INS | S-TAB|  DEL |      |                   |      |      |       |      |       |       |
            // |       |  RET | SPACE|  TAB | BSPC | CUT  |                   | CUT  |S-TAB | UNDO  | REDO |  TAB  |       |
            // | SHIFT | LALT | LCTRL| LSHFT|      | COPY |                   | COPY | LEFT |  UP   | DOWN | RIGHT | SHIFT |
            // |       |SEL_AL|SEL_LN|SEL_WD| FIND |PASTE |      |  |       | PASTE| HOME | PGUP  | PGDN |  END  |       |
            //                |      |      |      |      |      |  |       | FIND |FND_PR|FND_NX |      |

            bindings = <
&trans     &kp ESC    &kp INS    &kp LS(TAB)  &kp DEL     &trans                         &trans       &trans         &trans      &trans      &trans     &trans
&trans     &kp RET    &kp SPACE  &kp TAB      &kp BSPC    &kp K_CUT                      &kp K_CUT    &kp LS(TAB)    &kp K_UNDO  &kp K_REDO  &kp TAB    &trans
&kp LSHFT  &kp LALT   &kp LCTRL  &kp LSHFT    &trans      &kp K_COPY                     &kp K_COPY   &kp LEFT       &kp UP      &kp DOWN    &kp RIGHT  &kp RSHFT
&trans     &kp LC(A)  &kp LC(L)  &kp LC(W)    &kp K_FIND  &kp K_PASTE  &trans    &trans  &kp K_PASTE  &kp HOME       &kp PG_UP   &kp PG_DN   &kp END    &trans
                      &trans     &trans       &trans      &trans       &trans    &trans  &kp K_FIND   &kp LC(LS(G))  &kp LC(G)   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        number_layer {
            label = "number";

            // NUMBER LAYER - Numpad and Function Keys (adapted from glove80)
            // ------------------------------------------------------------------------------------------------------------
            // |   F1  |  F2  |  F3  |  F4  |  F5  |  F6  |                   |  F7  |  F8  |  F9   | F10  |  F11  |  F12  |
            // |   A   |  B   |  C   |  D   |  E   |  F   |                   | PIPE |  7   |   8   |  9   |   :   |   #   |
            // | SHIFT | HEX  | HEX  | HEX  | HEX  | HEX  |                   |  =   |  4   |   5   |  6   |   -   |   +   |
            // |   0   |      |      |      |      |      |      |  |       |   *  |  1   |   2   |  3   |   /   |   %   |
            //                |      |      |      |      |      |  |   0   |   (  |  [   |   ]   |  )   |

            bindings = <
&kp F1     &kp F2  &kp F3  &kp F4  &kp F5  &kp F6                    &kp F7     &kp F8    &kp F9    &kp F10   &kp F11    &kp F12
&kp A      &kp B   &kp C   &kp D   &kp E   &kp F                     &kp PIPE   &kp N7    &kp N8    &kp N9    &kp COLON  &kp HASH
&kp LSHFT  &trans  &trans  &trans  &trans  &trans                    &kp EQUAL  &kp N4    &kp N5    &kp N6    &kp MINUS  &kp PLUS
&kp N0     &trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp ASTRK  &kp N1    &kp N2    &kp N3    &kp FSLH   &kp PRCNT
                   &trans  &trans  &trans  &trans  &trans    &trans  &kp N0     &kp LBKT  &kp RBKT  &kp RPAR
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            label = "adjust";
            bindings = <
&bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                               &none  &none  &none  &none  &none  &none
&ext_power EP_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF                            &none  &none  &none  &none  &none  &none
&none              &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none            &none            &none                                      &none  &none  &none  &none  &none  &none
&none              &none            &none            &none            &none            &none            &rgb_ug RGB_TOG    &none  &none  &none  &none  &none  &none  &none
                                    &none            &none            &none            &none            &none              &none  &none  &none  &none  &none
            >;
        };
    };
};
